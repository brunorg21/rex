// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  username   String     @unique
  avatar_url String?
  posts      Post[]
  comments   Comments[]
  name       String
  follower   Follower[]
  bio        String?
  Like       Like[]
}

model Follower {
  id                  Int     @id @default(autoincrement())
  follower_username   String
  follower_name       String
  follower_avatar_url String?
  User                User?   @relation(fields: [userId], references: [id])
  userId              Int?
}

model Tag {
  id      Int    @id @default(autoincrement())
  tagName String
  Post    Post?  @relation(fields: [postId], references: [id])
  postId  Int?
}

model Post {
  id          Int         @id @default(autoincrement())
  title       String
  content     String
  publishedAt DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  attachments Attachment?
  comments    Comments[]
  tag         Tag[]
  likesCount  Int
  like        Like[]
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
}

model Attachment {
  id        Int      @id @default(autoincrement())
  path      String
  name      String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int      @unique
}

model Comments {
  id         Int      @id @default(autoincrement())
  comment    String
  postId     Int
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  post       Post     @relation(fields: [postId], references: [id])
  createdAt  DateTime @default(now())
  likesCount Int
}
